
<Server port="${tomcat.internalserver.port}" shutdown="SHUTDOWN">

	<Listener className="org.apache.catalina.core.JasperListener" />
	<Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
	<Listener className="org.apache.catalina.mbeans.JmxRemoteLifecycleListener" rmiRegistryPortPlatform="${tomcat.jmx.port}" rmiServerPortPlatform="${tomcat.jmx.server.port}" />


	<GlobalNamingResources>

		<!-- If you want to use the jndi database resource please set db.pool.fromJNDI property and uncomment following block.
			 Furthermore you have to copy the related jdbc library from platform/lib/dbdriver to the tomcat/lib folder -->
		<!-- <Resource 	name="hybrisDS"
 						auth="Container"
 						type="javax.sql.DataSource"
              		maxActive="${db.pool.maxActive}"
              		maxIdle="${db.pool.maxIdle}"
              		maxWait="${db.pool.maxWait}"
              		testWhileIdle="${db.pool.testWhileIdle}"
						timeBetweenEvictionRunsMillis="${db.pool.timeBetweenEvictionRunsMillis}"
						minEvictableIdleTimeMillis="${db.pool.minEvictableIdleTimeMillis}"
						numTestsPerEvictionRun="${db.pool.numTestsPerEvictionRun}"
						testOnBorrow="${db.pool.testOnBorrow}"
						testOnReturn="${db.pool.testOnReturn}"
						whenExhaustedAction="${db.pool.whenExhaustedAction}"
              		username="${db.username}"
             		password="${db.password.XMLENCODED}"
              		driverClassName="${db.driver}"
              		url="${db.url.XMLENCODED}" />
        -->

		<!-- If you want to use a mail JNDI resource please set mail.fromJNDI property and uncomment following block.
		     Furthermore you have to copy the mail library from ext/core/lib to tomcat/lib -->
		<!-- <Resource 	name="mail/Session" auth="Container"
		        		type="javax.mail.Session"
		        		mail.transport.protocol="smtp"
		        		mail.smtp.host="${mail.smtp.server}"
		        		mail.smtp.from="${mail.from}"
		        		description="Global E-Mail Resource"
		    		/>-->

	</GlobalNamingResources>


	<Service name="Catalina" >
		<Executor   name="hybrisExecutorHTTP"
					namePrefix="hybrisHTTP"
					maxThreads="${tomcat.maxthreads}"
					minSpareThreads="${tomcat.minsparethreads}"
					maxSpareThreads="${tomcat.maxsparethreads}"
					maxIdleTime="${tomcat.maxidletime}"/>

		<Executor   name="hybrisExecutorHTTPS"
					namePrefix="hybrisHTTPS"
					maxThreads="${tomcat.maxthreads}"
					minSpareThreads="${tomcat.minsparethreads}"
					maxSpareThreads="${tomcat.maxsparethreads}"
					maxIdleTime="${tomcat.maxidletime}"/>

		<Connector port="${tomcat.http.port}"
				   maxHttpHeaderSize="8192"
				   maxThreads="${tomcat.maxthreads}"
				   minSpareThreads="${tomcat.minsparethreads}"
				   maxSpareThreads="${tomcat.maxsparethreads}"
				   protocol="org.apache.coyote.http11.Http11NioProtocol"
				   executor="hybrisExecutorHTTP"
				   enableLookups="false"
				   acceptCount="${tomcat.acceptcount}"
				   connectionTimeout="20000"
				   URIEncoding="UTF-8"
				   disableUploadTimeout="true" />

		<Connector port="${tomcat.ssl.port}"
				   maxHttpHeaderSize="8192"
				   maxThreads="${tomcat.maxthreads}"
				   minSpareThreads="${tomcat.minsparethreads}"
				   protocol="org.apache.coyote.http11.Http11NioProtocol"
				   executor="hybrisExecutorHTTPS"
				   enableLookups="false"
				   acceptCount="${tomcat.acceptcount}"
				   connectionTimeout="20000"
				   disableUploadTimeout="true"
				   URIEncoding="UTF-8"
				   SSLEnabled="true"
				   scheme="https"
				   secure="true"
				   clientAuth="false"
				   sslProtocol="TLS"
				   keystoreFile="${catalina.home}/lib/keystore"
				   keystorePass="123456" />
		<!--
            We explicitly declare the AJP connectors as we want to separate HTTP and SSL traffic and the default connector setting Hybris provides is not good enough.
        -->
		<Connector protocol="org.apache.coyote.ajp.AjpProtocol"
				   executor="hybrisExecutorHTTP"
				   enableLookups="false"
				   acceptCount="${tomcat.acceptcount}"
				   connectionTimeout="120000"
				   maxThreads="${tomcat.maxthreads}"
				   minSpareThreads="${tomcat.minsparethreads}"
				   maxSpareThreads="${tomcat.maxsparethreads}"
				   port="${tomcat.ajp.port}"
				   proxyPort="${proxy.http.port}"
				   redirectPort="${proxy.ssl.port}"
				   URIEncoding="UTF-8" />

		<Connector protocol="org.apache.coyote.ajp.AjpProtocol"
				   executor="hybrisExecutorHTTPS"
				   enableLookups="false"
				   acceptCount="${tomcat.acceptcount}"
				   connectionTimeout="120000"
				   maxThreads="${tomcat.maxthreads}"
				   minSpareThreads="${tomcat.minsparethreads}"
				   maxSpareThreads="${tomcat.maxsparethreads}"
				   port="${tomcat.ajp.secureport}"
				   proxyPort="${proxy.ssl.port}"
				   redirectPort="${proxy.http.port}"
				   scheme="https"
				   secure="true"
				   URIEncoding="UTF-8" />

		<Engine name="Catalina" defaultHost="localhost" jvmRoute="app${cluster.id}">
			<Valve   className="org.apache.catalina.valves.AccessLogValve"
					 directory="${HYBRIS_LOG_DIR}/tomcat"
					 prefix="access."
					 suffix=".log"
					 pattern="combined"
			/>

			<Host 	name="localhost"
					 appBase="webapps"
					 unpackWARs="false"
					 autoDeploy="false">


				${tomcat.webapps}


			</Host>

		</Engine>

	</Service>

</Server>
