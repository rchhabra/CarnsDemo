#
# Import the Solr configuration for the Travel store
#
$serverConfigName = travelSolrServerConfig
$indexConfigName = travelSolrIndexConfig
$searchConfigName = travelPageSize
$facetSearchConfigName = travelIndex
$facetSearchConfigDescription = Travel Solr Index
$searchIndexNamePrefix = travel
$airlineIndexedType = travelAirlineIndexedType
$hotelsIndexedType = travelHotelsIndexedType
$indexBaseSite = travel
$indexLanguages = en
$indexCurrencies = GBP, EUR


#
# Setup the Solr server, indexer, and search configs
#

# Create the solr server configuration
INSERT_UPDATE SolrServerConfig; name[unique = true]; mode(code); embeddedMaster
; $serverConfigName ; standalone ; false

INSERT_UPDATE SolrEndpointUrl; solrServerConfig(name)[unique = true]; url[unique = true]; master[unique = true, default = false]
; $serverConfigName ; http://localhost:8983/solr ; true

# Create the solr indexer configuration
INSERT_UPDATE SolrIndexConfig; name[unique = true]; batchSize; numberOfThreads; indexMode(code);
; $indexConfigName ; 100 ; 1 ; TWO_PHASE ;

# Create the faceted search configuration
# Page size is set to a high value as all results are required for accommodation search
# Number of results returned: days * accommodation offering matching the searched criteria
# per current data setup 30 days * 300 accommodation offering ~ 10000
INSERT_UPDATE SolrSearchConfig; description[unique = true]; pageSize; legacyMode
; $searchConfigName ; 100000 ; false

INSERT_UPDATE SolrIndexedTypeDefaultSortOrderMapping; indexedType[unique = true]; defaultSortOrder
; TransportOffering     ; code
; MarketingRatePlanInfo ; boosted, starRating, averageUserRating

#
# Setup the indexed types, their properties, and the update queries
#

# Declare the indexed type Product
INSERT_UPDATE SolrIndexedType; identifier[unique = true]; type(code); variant; sorts(&sortRefID)
; $airlineIndexedType ; TransportOffering     ; false ; airlineSortRef1
; $hotelsIndexedType  ; MarketingRatePlanInfo ; false ; hotelsSortRef1, hotelsSortRef2, hotelsSortRef3, hotelsSortRef4

INSERT_UPDATE SolrFacetSearchConfig; name[unique = true]; description; indexNamePrefix; languages(isocode); currencies(isocode); solrServerConfig(name); solrSearchConfig(description); solrIndexConfig(name); solrIndexedTypes(identifier); enabledLanguageFallbackMechanism
; $facetSearchConfigName ; $facetSearchConfigDescription ; $searchIndexNamePrefix ; $indexLanguages ; $indexCurrencies ; $serverConfigName ; $searchConfigName ; $indexConfigName ; $airlineIndexedType, $hotelsIndexedType ; true

UPDATE BaseSite; uid[unique = true]; solrFacetSearchConfiguration(name)
; $indexBaseSite ; $facetSearchConfigName

# Define Guest range set
INSERT_UPDATE SolrValueRangeSet; name[unique = true]; qualifier; type; solrValueRanges(&rangeValueRefID)
; accommodationGuestRatingRange ; ; double ; rangeRefGuestRating0, rangeRefGuestRating6, rangeRefGuestRating7, rangeRefGuestRating8, rangeRefGuestRating9

# Define Guest Ranges
INSERT_UPDATE SolrValueRange; &rangeValueRefID; solrValueRangeSet(name)[unique = true]; name[unique = true]; from; to
; rangeRefGuestRating0 ; accommodationGuestRatingRange ; No Rating    ; 0 ; 5.99
; rangeRefGuestRating6 ; accommodationGuestRatingRange ; Pleasant 6+  ; 6 ; 10
; rangeRefGuestRating7 ; accommodationGuestRatingRange ; Good 7+      ; 7 ; 10
; rangeRefGuestRating8 ; accommodationGuestRatingRange ; Very Good 8+ ; 8 ; 10
; rangeRefGuestRating9 ; accommodationGuestRatingRange ; Wonderful 9+ ; 9 ; 10

# Define price range set
INSERT_UPDATE SolrValueRangeSet; name[unique = true]; qualifier; type; solrValueRanges(&rangeValueRefID)
; accommodationPriceRangeEUR ; EUR ; double ; rangeRefEUR1, rangeRefEUR2, rangeRefEUR3, rangeRefEUR4, rangeRefEUR5, rangeRefEUR6
; accommodationPriceRangeGBP ; GBP ; double ; rangeRefGBP1, rangeRefGBP2, rangeRefGBP3, rangeRefGBP4, rangeRefGBP5, rangeRefGBP6

# Define price ranges
INSERT_UPDATE SolrValueRange; &rangeValueRefID; solrValueRangeSet(name)[unique = true]; name[unique = true]; from; to
; rangeRefEUR1 ; accommodationPriceRangeEUR ; €0 - €100   ; 0   ; 100.99
; rangeRefEUR2 ; accommodationPriceRangeEUR ; €101 - €200 ; 101 ; 200.99
; rangeRefEUR3 ; accommodationPriceRangeEUR ; €201 - €300 ; 201 ; 300.99
; rangeRefEUR4 ; accommodationPriceRangeEUR ; €301 - €400 ; 301 ; 400.99
; rangeRefEUR5 ; accommodationPriceRangeEUR ; €401 - €500 ; 401 ; 500.99
; rangeRefEUR6 ; accommodationPriceRangeEUR ; €501+       ; 501 ;


; rangeRefGBP1 ; accommodationPriceRangeGBP ; £0 - £100   ; 0   ; 100.99
; rangeRefGBP2 ; accommodationPriceRangeGBP ; £100 - £200 ; 101 ; 200.99
; rangeRefGBP3 ; accommodationPriceRangeGBP ; £201 - £300 ; 201 ; 300.99
; rangeRefGBP4 ; accommodationPriceRangeGBP ; £301 - £400 ; 301 ; 400.99
; rangeRefGBP5 ; accommodationPriceRangeGBP ; £401 - £500 ; 401 ; 500.99
; rangeRefGBP6 ; accommodationPriceRangeGBP ; £501+       ; 501 ;


# Non-facet properties
INSERT_UPDATE SolrIndexedProperty; solrIndexedType(identifier)[unique = true]; name[unique = true]; type(code); sortableType(code); currency[default = false]; localized[default = false]; multiValue[default = false]; useForSpellchecking[default = false]; useForAutocomplete[default = false]; fieldValueProvider; valueProviderParameter
; $airlineIndexedType ; itemtype                         ; string       ; ;      ;      ;      ; ; ;                                                            ;
; $airlineIndexedType ; code                             ; string       ; ;      ;      ;      ; ; ; springELValueProvider                                      ; getCode()
; $airlineIndexedType ; number                           ; text         ; ;      ; true ;      ; ; ;                                                            ;
; $airlineIndexedType ; duration                         ; string       ; ;      ;      ;      ; ; ;                                                            ;
; $airlineIndexedType ; type                             ; string       ; ;      ;      ;      ; ; ; springELValueProvider                                      ; getType().getCode()
; $airlineIndexedType ; travelSectorCode                 ; string       ; ;      ;      ;      ; ; ; springELValueProvider                                      ; getTravelSector() != null ? getTravelSector().getCode() : null
; $airlineIndexedType ; originTerminalCode               ; string       ; ;      ;      ;      ; ; ; springELValueProvider                                      ; getOriginTerminal() != null ? getOriginTerminal().getCode() : null
; $airlineIndexedType ; destinationTerminalCode          ; string       ; ;      ;      ;      ; ; ; springELValueProvider                                      ; getDestinationTerminal() != null ? getDestinationTerminal().getCode() : null
; $airlineIndexedType ; originLocationCity               ; string       ; ;      ; true ;      ; ; ; transportOfferingOriginLocationCityValueProvider           ;
; $airlineIndexedType ; originLocationCountry            ; string       ; ;      ; true ;      ; ; ; transportOfferingOriginLocationCountryValueProvider        ;
; $airlineIndexedType ; destinationLocationCity          ; string       ; ;      ; true ;      ; ; ; transportOfferingDestinationLocationCityValueProvider      ;
; $airlineIndexedType ; destinationLocationCountry       ; string       ; ;      ; true ;      ; ; ; transportOfferingDestinationLocationCountryValueProvider   ;
; $airlineIndexedType ; departureTime                    ; date         ; ;      ;      ;      ; ; ;                                                            ;
; $airlineIndexedType ; arrivalTime                      ; date         ; ;      ;      ;      ; ; ;                                                            ;
; $airlineIndexedType ; originLocationName               ; string       ; ;      ; true ;      ; ; ; springELValueProvider                                      ; getTravelSector() != null ? getTravelSector().getOrigin().getLocation().getName(#lang) : null
; $airlineIndexedType ; destinationLocationName          ; string       ; ;      ; true ;      ; ; ; springELValueProvider                                      ; getTravelSector() != null ? getTravelSector().getDestination().getLocation().getName(#lang) : null
; $airlineIndexedType ; originLocationHierarchy          ; string       ; ;      ;      ;      ; ; ; transportOfferingOriginLocationHierarchyValueProvider      ;
; $airlineIndexedType ; destinationLocationHierarchy     ; string       ; ;      ;      ;      ; ; ; transportOfferingDestinationLocationHierarchyValueProvider ;
; $airlineIndexedType ; originTransportFacilityName      ; string       ; ;      ; true ;      ; ; ; springELValueProvider                                      ; getTravelSector().getOrigin().getName(#lang)
; $airlineIndexedType ; destinationTransportFacilityName ; string       ; ;      ; true ;      ; ; ; springELValueProvider                                      ; getTravelSector().getDestination().getName(#lang)
; $airlineIndexedType ; vehicleInformationName           ; string       ; ;      ; true ;      ; ; ; springELValueProvider                                      ; getTransportVehicle().getTransportVehicleInfo().getName(#lang)
; $airlineIndexedType ; vehicleInformationCode           ; string       ; ;      ; true ;      ; ; ; springELValueProvider                                      ; getTransportVehicle().getTransportVehicleInfo().getCode()
; $airlineIndexedType ; departureTimeZoneId              ; string       ; ;      ;      ;      ; ; ; springELValueProvider                                      ; getTravelSector().getOrigin().getPointOfService().size() > 0 ? getTravelSector().getOrigin().getPointOfService().get(0).getTimeZoneId() : "UTC"
; $airlineIndexedType ; arrivalTimeZoneId                ; string       ; ;      ;      ;      ; ; ; springELValueProvider                                      ; getTravelSector().getDestination().getPointOfService().size() > 0 ? getTravelSector().getDestination().getPointOfService().get(0).getTimeZoneId() : "UTC"
; $airlineIndexedType ; travelProvider                   ; string       ; ;      ;      ;      ; ; ; springELValueProvider                                      ; getTravelProvider().getCode()
; $hotelsIndexedType  ; itemtype                         ; string       ; ;      ;      ;      ; ; ;                                                            ;
; $hotelsIndexedType  ; code                             ; string       ; ;      ;      ;      ; ; ; springELValueProvider                                      ; getCode()
; $hotelsIndexedType  ; propertyName                     ; sortabletext ; ;      ; true ;      ; ; ; springELValueProvider                                      ; getAccommodationOffering().getName(#lang)
; $hotelsIndexedType  ; locationNames                    ; sortabletext ; ;      ; true ; true ; ; ; locationNamesValueResolver                                 ;
; $hotelsIndexedType  ; address                          ; string       ; ;      ;      ;      ; ; ; addressValueResolver                                       ;
; $hotelsIndexedType  ; contactNumber                    ; string       ; ;      ;      ;      ; ; ; contactNumberValueResolver                                 ;
; $hotelsIndexedType  ; averageUserRating                ; double       ; ;      ;      ;      ; ; ; springELValueProvider                                      ; getAccommodationOffering().getAverageUserRating()
; $hotelsIndexedType  ; numberOfReviews                  ; int          ; ;      ;      ;      ; ; ; springELValueProvider                                      ; getAccommodationOffering().getNumberOfReviews()
; $hotelsIndexedType  ; imageUrl                         ; string       ; ;      ;      ;      ; ; ; offeringImageUrlValueResolver                              ;
; $hotelsIndexedType  ; priceValue                       ; double       ; ; true ;      ;      ; ; ; roomRatePriceValueResolver                                 ;
; $hotelsIndexedType  ; taxValue                         ; double       ; ; true ;      ;      ; ; ; roomRateTaxValueResolver                                   ;
; $hotelsIndexedType  ; accommodationInfos               ; string       ; ;      ; true ; true ; ; ; accommodationInfosValueResolver                            ;
; $hotelsIndexedType  ; minChildrenCount                 ; int          ; ;      ;      ;      ; ; ; minChildrenCountValueResolver                              ;
; $hotelsIndexedType  ; maxChildrenCount                 ; int          ; ;      ;      ;      ; ; ; maxChildrenCountValueResolver                              ;
; $hotelsIndexedType  ; latlon                           ; location_rpt ; ;      ;      ;      ; ; ; accommodationCoordinatesValueResolver                      ;
; $hotelsIndexedType  ; boosted                          ; boolean      ; ;      ;      ;      ; ; ; springELValueProvider                                      ; getAccommodationOffering().getBoosted()
; $hotelsIndexedType  ; popularity                       ; int          ; ;      ;      ;      ; ; ; springELValueProvider                                      ; getAccommodationOffering().getPopularity()
; $hotelsIndexedType  ; ratePlanConfigs                  ; string       ; ;      ;      ; true ; ; ; ratePlanConfigsValueResolver                               ;


# Full text search query fields
INSERT_UPDATE SolrIndexedProperty; solrIndexedType(identifier)[unique = true]; name[unique = true]; ftsQuery[default = false]; ftsQueryBoost; ftsFuzzyQuery[default = false]; ftsFuzzyQueryBoost; ftsWildcardQuery[default = false]; ftsWildcardQueryType(code)[default = PREFIX_AND_POSTFIX]; ftsWildcardQueryBoost;
; $hotelsIndexedType ; locationNames ; ; ; ; ; true ; ; 10 ;
; $hotelsIndexedType ; propertyName  ; ; ; ; ; true ; ; 20 ;

# Category facets
INSERT_UPDATE SolrIndexedProperty; solrIndexedType(identifier)[unique = true]; name[unique = true]; type(code); multiValue[default = true]; facet[default = true]; facetType(code); facetSort(code); priority; visible; categoryField[default = true]; fieldValueProvider; valueProviderParameter; facetDisplayNameProvider; customFacetSortProvider
; $hotelsIndexedType ; starRating ; int    ; false ; ; MultiSelectOr  ; Custom ; 5000 ; true ; ; springELValueProvider       ; getAccommodationOffering().getStarRating() ; starRatingFacetValueDisplayNameProvider ; numericFacetSortProviderAsc
; $hotelsIndexedType ; amenities  ; string ; true  ; ; MultiSelectAnd ; Alpha  ; 5000 ; true ; ; amenityFieldValueResolver   ;                                            ; amenityFacetValueDisplayNameProvider    ;
; $hotelsIndexedType ; boardType  ; string ; true  ; ; MultiSelectOr  ; Alpha  ; 5000 ; true ; ; boardTypeFieldValueResolver ;                                            ;                                         ;

# Other facet properties
INSERT_UPDATE SolrIndexedProperty; solrIndexedType(identifier)[unique = true]; name[unique = true]; type(code); sortableType(code); currency[default = false]; localized[default = false]; multiValue[default = false]; facet[default = true]; facetType(code); facetSort(code); ftsWildcardQuery[default = false]; priority; visible; useForSpellchecking[default = false]; useForAutocomplete[default = false]; fieldValueProvider; valueProviderParameter; facetDisplayNameProvider; customFacetSortProvider; topValuesProvider; rangeSets(name)
; $airlineIndexedType ; departureDate                ; string ; ;      ; ;      ; ; MultiSelectOr  ; Count ;      ; 10000 ; true  ; ; ; customDateValueProvider                               ;                                              ; ; ;                          ;
; $airlineIndexedType ; originTransportFacility      ; string ; ;      ; ;      ; ; MultiSelectOr  ; Alpha ;      ; 10000 ; true  ; ; ; springELValueProvider                                 ; getTravelSector().getOrigin().getCode()      ; ; ;                          ;
; $airlineIndexedType ; destinationTransportFacility ; string ; ;      ; ;      ; ; MultiSelectOr  ; Alpha ;      ; 10000 ; true  ; ; ; springELValueProvider                                 ; getTravelSector().getDestination().getCode() ; ; ;                          ;
; $airlineIndexedType ; activity                     ; string ; ;      ; ; true ; ; MultiSelectOr  ; Alpha ;      ; 10000 ; true  ; ; ; transportOfferingActivitiesValueProvider              ;                                              ; ; ;                          ;
; $airlineIndexedType ; originLocationData           ; text   ; ;      ; ; true ; ; MultiSelectAnd ; Alpha ; true ; 10000 ; true  ; ; ; transportOfferingOriginLocationDataValueProvider      ;                                              ; ; ;                          ;
; $airlineIndexedType ; destinationLocationData      ; text   ; ;      ; ; true ; ; MultiSelectAnd ; Alpha ; true ; 10000 ; true  ; ; ; transportOfferingDestinationLocationDataValueProvider ;                                              ; ; ;                          ;
; $airlineIndexedType ; allOriginsToDestination      ; text   ; ;      ; ; true ; ; MultiSelectAnd ; Alpha ;      ; 10000 ; true  ; ; ; transportOfferingAllOriginsToDestinationValueProvider ;                                              ; ; ;                          ;
; $airlineIndexedType ; status                       ; string ; ;      ; ;      ; ; MultiSelectOr  ; Alpha ;      ; 10000 ; true  ; ; ; springELValueProvider                                 ; getStatus()                                  ; ; ;                          ;
; $hotelsIndexedType  ; locationCodes                ; string ; ;      ; ;      ; ; MultiSelectOr  ; Alpha ;      ; 10000 ; false ; ; ; locationCodesValueResolver                            ;                                              ; ; ;                          ;                                                        ;
; $hotelsIndexedType  ; numberOfAdults               ; int    ; ;      ; ;      ; ; MultiSelectOr  ; Count ;      ; 10000 ; false ; ; ; springELValueProvider                                 ; getNumberOfAdults()                          ; ; ;                          ;                                                        ;
; $hotelsIndexedType  ; dateOfStay                   ; string ; ;      ; ;      ; ; MultiSelectOr  ; Alpha ;      ; 10000 ; false ; ; ; dateOfStayValueResolver                               ;                                              ; ; ;                          ;                                                        ;
; $hotelsIndexedType  ; guestRating                  ; double ; ;      ; ; true ; ; Refine         ; Alpha ;      ; 5000  ; true  ; ; ; guestRatingValueResolver                              ;                                              ; ; ; defaultTopValuesProvider ; accommodationGuestRatingRange                          ;
; $hotelsIndexedType  ; priceRange                   ; double ; ; true ; ;      ; ; MultiSelectOr  ; Alpha ;      ; 10000 ; true  ; ; ; roomRatePriceRangeValueResolver                       ;                                              ; ; ; defaultTopValuesProvider ; accommodationPriceRangeGBP, accommodationPriceRangeEUR ;
; $hotelsIndexedType  ; propertyCode                 ; string ; ;      ; ;      ; ; MultiSelectOr  ; Alpha ;      ; 10000 ; false ; ; ; springELValueProvider                                 ; getAccommodationOffering().getCode()         ; ; ;                          ;                                                        ;

# Create the queries that will be used to extract data for Solr
INSERT_UPDATE SolrIndexerQuery; solrIndexedType(identifier)[unique = true]; identifier[unique = true]; type(code); injectCurrentDate[default = true]; injectCurrentTime[default = true]; injectLastIndexTime[default = true]; query; user(uid); active[default = true]
; $airlineIndexedType ; travelAirline-fullQuery   ; full   ; ; ; false ; "SELECT {PK} FROM {TransportOffering} where {active} = ?active"                                      ; anonymous ;
; $airlineIndexedType ; travelAirline-updateQuery ; update ; ; ;       ; "SELECT {PK} FROM {TransportOffering} where {active} = ?active and {modifiedtime} >= ?lastIndexTime" ; anonymous ;
; $hotelsIndexedType  ; travelHotels-fullQuery    ; full   ; ; ; false ; "SELECT {PK} FROM {MarketingRatePlanInfo}"                                                           ; anonymous ;
; $hotelsIndexedType  ; travelHotels-updateQuery  ; update ; ; ;       ; "SELECT {PK} FROM {MarketingRatePlanInfo} where {modifiedtime} >= ?lastIndexTime"                    ; anonymous ;


# Define the available sorts
INSERT_UPDATE SolrSort; &sortRefID; indexedType(identifier)[unique = true]; code[unique = true]; useBoost; visible[default = true]
; airlineSortRef1 ; $airlineIndexedType ; departureTime-asc ; false
; hotelsSortRef1  ; $hotelsIndexedType  ; boost-dsc         ; true ; false
; hotelsSortRef2  ; $hotelsIndexedType  ; most-popular      ; false
; hotelsSortRef3  ; $hotelsIndexedType  ; guest-rating      ; false
; hotelsSortRef4  ; $hotelsIndexedType  ; star-rating       ; false

# Define the sort fields
INSERT_UPDATE SolrSortField; sort(indexedType(identifier), code)[unique = true]; fieldName[unique = true]; ascending[unique = true]
; $airlineIndexedType:departureTime-asc ; departureTime     ; true
; $hotelsIndexedType:boost-dsc          ; boosted           ; true
; $hotelsIndexedType:most-popular       ; popularity        ; false
; $hotelsIndexedType:guest-rating       ; averageUserRating ; false
; $hotelsIndexedType:star-rating        ; starRating        ; false

## Boost Rules
INSERT_UPDATE GlobalSolrSearchProfile; code[unique = true]; indexedType(identifier)
; travelSearchProfile ; $hotelsIndexedType

INSERT_UPDATE SolrBoostRule; propertyValue; boostFactor[unique = true]; operator(code); solrIndexedProperty(solrIndexedType(identifier), name)[unique = true]; solrSearchProfiles(code)
; true                  ; 50 ; EQUAL_TO ; $hotelsIndexedType:boosted      ; travelSearchProfile
; HILTON_LONDON_WEMBLEY ; 75 ; EQUAL_TO ; $hotelsIndexedType:propertyCode ; travelSearchProfile
